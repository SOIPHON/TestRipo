SSH (Secure Shell) 通信について

# クライアント側で秘密鍵、公開鍵を生成する -----------

> ssh-keygen -t rsa -T [ファイル名]
-t : 暗号化方式を指定
-T : ファイル名の指定

[ファイル名],[ファイル名].pub が生成される

# 公開鍵をサーバに渡す------------------------------

> scp [ファイル名].pub [ホスト名]:/home/[ディレクトリ名]

AWSの場合
> scp - i xxx.pem ~/.ssh/[ファイル名].pub ec2-user@[ホスト名]:/home/ec2-user/

# サーバ側で公開鍵とユーザーを結びつける----------------

サーバ側
adduser [ユーザ名]
passwd [ユーザ名]

ユーザ作成後、ユーザーにsudo権限を与える
>vi /etc/suduers
[ユーザー名] ALL=(ALL) ALL

サーバー側に渡した鍵をユーザー配下におく
> cd /home/[ユーザー名]
> mkdir .ssh
> mv /home/ec2-user/[ファイル名].pub /home/[ファイル名]/.ssh/authorized_keys

オーナーグループ、パーミッションを変更する
> chown [ユーザー名] /home/[ユーザー名]/.ssh/authorized_keys
> chgrp [ユーザー名] /home/[ユーザー名]/.ssh/authorized_keys
> chmod 600 /home/[ユーザー名]/.shh/authorized_keys
> chmod 700 /home/[ユーザー名]/.shh

# SSHコマンド

クライアント側
> vi ~/.shh/config
Host [ユーザー名等]
　HostName [ホスト名]
　User [ユーザー名]
　IdentifityFile ~/.ssh/[秘密鍵ファイル名]

> ssh [ユーザー名等]

1. サーバ側で乱数を発生させ、公開鍵とその乱数で暗号を作成。作成した暗号をクライアント側へ渡す。
2. 暗号生成と同時に、乱数を利用しハッシュ値を生成する(サーバ側)
3. クライアント側で暗号を受け取り、パスフレーズで秘密鍵を複合化。暗号化を複合し、サーバ側で生成した乱数を発生させる、
4. 発生した乱数からサーバ側で生成したハッシュ値を生成し、knon_hostsに保存。
5. クライアント側で生成したハッシュ値をサーバ側へ送る。
7. クライアントから送られてきたハッシュ値とサーバ側で持っているハッシュ値が一致したら認証成功、